const { cmd } = require("../command");
const axios = require("axios");

cmd(
  {
    pattern: "imagine",
    react: "🎨",
    desc: "Generate AI Image from text prompt",
    category: "ai",
    filename: __filename,
  },
  async (
    robin,
    mek,
    m,
    { from, quoted, body, isCmd, command, args, q, isGroup, sender, reply }
  ) => {
    try {
      if (!q) return reply("*Please provide a description for the image you want to generate.* 🎨✨\n\n*Example:* .imagine a beautiful sunset over mountains");

      // Send loading message
      await reply("🎨 *Generating your AI image...* ⏳\n*This may take a few seconds.*");

      // Clean and prepare the prompt
      const prompt = encodeURIComponent(q.trim());
      
      // Generate image using Pollinations.ai (completely free)
      const imageUrl = `https://image.pollinations.ai/prompt/${prompt}?width=1024&height=1024&seed=${Math.floor(Math.random() * 1000000)}`;
      
      // Download the generated image
      const response = await axios.get(imageUrl, {
        responseType: 'arraybuffer',
        timeout: 60000, // 60 seconds timeout
      });

      if (response.data) {
        // Prepare caption
        const caption = `🎨 *AI GENERATED IMAGE* 🎨

✨ *Prompt*: ${q}
🤖 *Generated by*: Pollinations AI
⚡ *Quality*: 1024x1024

𝐌𝐚𝐝𝐞 𝐛𝐲 *P_I_K_O* ☯️`;

        // Send the generated image
        await robin.sendMessage(
          from,
          {
            image: response.data,
            caption: caption,
          },
          { quoted: mek }
        );

        reply("*Your AI image has been generated successfully!* 🎨💜");
      } else {
        throw new Error("Failed to generate image");
      }
    } catch (e) {
      console.error("AI Image Generation Error:", e);
      
      // Handle specific errors
      if (e.code === 'ECONNABORTED') {
        reply("❌ *Error:* Image generation timed out. Please try again with a simpler prompt.");
      } else if (e.response && e.response.status === 429) {
        reply("❌ *Error:* Too many requests. Please wait a moment and try again.");
      } else {
        reply(`❌ *Error generating image:* ${e.message}\n\n*Tip:* Try using a different prompt or try again later.`);
      }
    }
  }
);

// Alternative command pattern for those who prefer 'generate'
cmd(
  {
    pattern: "generate",
    react: "🖼️",
    desc: "Generate AI Image from text prompt (alternative command)",
    category: "ai",
    filename: __filename,
  },
  async (
    robin,
    mek,
    m,
    { from, quoted, body, isCmd, command, args, q, isGroup, sender, reply }
  ) => {
    try {
      if (!q) return reply("*Please provide a description for the image you want to generate.* 🖼️✨\n\n*Example:* .generate a cute cat wearing sunglasses");

      // Send loading message
      await reply("🖼️ *Creating your AI artwork...* ⏳");

      // Clean and prepare the prompt
      const prompt = encodeURIComponent(q.trim());
      
      // Different style variations for the generate command
      const styles = [
        "?style=photorealistic",
        "?style=digital-art", 
        "?style=anime",
        "?style=oil-painting",
        "?style=watercolor"
      ];
      
      const randomStyle = styles[Math.floor(Math.random() * styles.length)];
      
      // Generate image with random style
      const imageUrl = `https://image.pollinations.ai/prompt/${prompt}${randomStyle}&width=1024&height=1024&seed=${Math.floor(Math.random() * 1000000)}`;
      
      // Download the generated image
      const response = await axios.get(imageUrl, {
        responseType: 'arraybuffer',
        timeout: 60000,
      });

      if (response.data) {
        // Prepare caption
        const caption = `🖼️ *AI ARTWORK GENERATED* 🖼️

🎯 *Prompt*: ${q}
🎨 *Style*: ${randomStyle.replace('?style=', '').replace('-', ' ')}
🤖 *AI Engine*: Pollinations
📐 *Resolution*: 1024x1024

𝐌𝐚𝐝𝐞 𝐛𝐲 *P_I_K_O* ☯️`;

        // Send the generated image
        await robin.sendMessage(
          from,
          {
            image: response.data,
            caption: caption,
          },
          { quoted: mek }
        );

        reply("*Your AI artwork is ready!* 🖼️💙");
      } else {
        throw new Error("Failed to generate artwork");
      }
    } catch (e) {
      console.error("AI Art Generation Error:", e);
      reply(`❌ *Error creating artwork:* ${e.message}\n\n*Please try again with a different prompt.*`);
    }
  }
);
